#
# Release version numbers and dates are added to this file by the build system.
# NOTE: A release number of 0.0.0.0 indicates that you are looking at a 
# development sandbox, NOT a release package.
#

SheafSystem Release Notes Version @SHEAFSYSTEM_LIB_VERSION@  @RELEASE_DATE@

Changes pulled from github.com/DavidMButler/SheafSystem branch issue2

1. Qualified all internal includes of SheafSystem header files by scope "SheafSystem",
i.e. #include "SheafSystem/xxx.h".

2. Updated build system to copy all header files into <installation dir>/include/SheafSystem
   or <build dir>/include/SheafSystem so scoped header references will resolve correctly
   at compile time.

SheafSystem Release Notes Version 4.0.0.1  Tue 04/08/17

Changes pulled from github.com/DavidMButler/SheafSystem branch version-4-merge

1.  Merged release 4.0.0.0 from LPS private repository into github repository.
    Private repository was heretofore maintained to satisfy contractual obligations
    that no longer exist. All future development will take place in github repository.

SheafSystem Release Notes Version 4.0.0.0  Tue 07/26/16

Changes in branch COM-521:

1.  Updated entire system to Windows10/VS2015/RHEL6.6/gcc4.9.3/C++11

2.  Updated to current (or at least newer) versions of all prerequisties, see
    the README-Linux or README-Windows files.

3.  Completely refactored and reimplemented build sys for consistency with CMake 3.x.
    See the README files for detailed instructions on new build procedures.
    Supports <package>Config discovery mechanism, see CMake documentation.

SheafSystem Release Notes Version 3.6.2.4 04/20/2015

Changes in branch COM-516:

1.  Added build and install  instructions README-Linux and README-Windows.

SheafSystem Release Notes Version 3.6.2.3 10/04/2014

Changes in branch COM-504:

1.  Refactored mutable_index_space hierarchy. Moved all mutable API except insert and map_rep_insert_entry
    into classes gathered_insertion_index_space_state and gathered_insertion_index_space_handle.
    Renamed mutable_index_space_* to scattered_insertion_idex_space*. Clients should change all
    mutable_index_space_handle references to scattered_insertion_index_space_handle if they are
    using insert, otherwise change to gathered_insertion_index_space_handle.

2.  Made list_index_space* direct descendant of gathered_insertion_index_space*. Reimplemented
    list_index_space_state to make is_gathered an invariant - no invalid_pod_index() placeholders.
    Fixes issues COM-504, COM-505, and COM-508. Removes O(n**2) worst case performance from
    list_index_space_state::remove_hub.

Changes in branch COM-515:

1. Added specialized stream insertion operator for class list_index_space_handle.

2. Fixed COM-513 and COM-515. Added function name to exception message. Added cerr output for Linux.



SheafSystem Release Notes Version 3.5.2.1 02/26/2014

1. Fixed issue SC-29: need sheaf schema for surface_complex, model, and shred
  a. Reorganized facets in namespace classes for greater coherence and clarity.
  b. Removed base space member prototypes from geometry_namespace that belong in surface_complex.
  c. Fixed problem in discretization_iterator.cc thas was causing erroneous iterations for
     section schema with discretization subposet not an antichain (e.g. cells subposet).
  d. Reorganized facets in structured_blcok1,2,3d so correct member function not in any facet.
  e. Added inc_x,y,z member functions to sec_e1,2,3_uniform.
	
2. Fixed issue COM-481: reading subposets and attaching to id spaces.

3. Fixed issue COM-467: standard_host methods in base_spaces do not return host if it already exists.

4. Fixed bug in list_index_space_state::push_front() that was not updating the end extrema correctly.



SheafSystem Release Notes Version 3.5.2.0 02/26/2014

1. Implemented New Feature COM-483 field_vd::property_at_coordinates should have vd_lite arguments.

SheafSystem Release Notes Version  3.4.0.1 01/31/2014

1.  The id space construction mechanism has been replace with a static new_space() constructor on the 
    id space handles and a static new_interval() constructor on the id space intervals.  Handle classes 
    have been implemented for all explicit id space states.

2.  The using namespace std statements have been removed from all header files.  All c++ standard classes 
    are fully qualified with std:: in the header files.  All source files that use standard classes have a
    using namespace std after the #include statements.  Function definitions in the the source files were 
    made consistent with the function declarations in the header files (i.e., the function signatures have 
    namespace qualifiers for c++ standard classes).

3.  hash_set, hash_map, and hash_mulitmap have been replaced by unordered_set, unordered_map and 
    unordered_multimap, respectively.  Since gcc-4.2.2 still puts the unordered classes in the std::tr1 namespace, 
    a namespace alias has been created for the unordered classes.  This namespace alias is unordered::.  When 
    using unordered classes, qualify the class with unordered:: and when using an unordered class in the 
    source file, add using namespace unordered.  This is done for portablity.  The user can directly use std:: 
    or std::tr1 but the code may not be portable.

4.  std::slist has been replaced by sheaf::singly_linked_list.  singly_linked_list is a wrapper for forward_list.
    If forward_list is not available, singly_linked_list wraps slist.  Only the interface common to forward_list 
    in gcc, forward_list in Windows and slist is supported by singly_linked_list.

5.  SheafSystem has been updated to build with 4.4 series of GCC.  SheafSystem also builds with the 4.2 
    series of GCC and the c++ compiler in VisualStudio 2010.
